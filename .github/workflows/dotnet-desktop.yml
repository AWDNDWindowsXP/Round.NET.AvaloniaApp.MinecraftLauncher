name: Publish

on:
  workflow_dispatch:
  push:
    branches: ["neo"]

jobs:
  time:
    runs-on: ubuntu-latest
    outputs:
      v: ${{ steps.date.outputs.time }}
      y: ${{ steps.date.outputs.y }}
      md: ${{ steps.date.outputs.md }}
      hm: ${{ steps.date.outputs.hm }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Generate version
        id: date
        run: |
          echo "time=$(date +'%Y.%m%d.%H.%M')" >> $GITHUB_OUTPUT
          echo "y=$(date +'%Y')" >> $GITHUB_OUTPUT
          echo "md=$(date +'%m%d')" >> $GITHUB_OUTPUT
          echo "hm=$(date +'%H%M')" >> $GITHUB_OUTPUT
      - name: Show version
        run: |
          echo "Build version: ${{ steps.date.outputs.time }}"

  # Windows 平台构建
  win-x86:
    needs: time
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set version info
        run: |
          echo "${{ needs.time.outputs.v }}" > ./src/RMCL/RMCL.Desktop/DateTime.txt
      
      - name: Build (x86)
        run: |
          cd ./src/RMCL/RMCL.Desktop
          dotnet publish -c Release -r win-x86 `
            /p:PublishSingleFile=true `
            /p:PublishReadyToRun=true `
            /p:IncludeNativeLibrariesForSelfExtract=true `
            /p:SelfContained=true `
            /p:Version=${{ needs.time.outputs.v }} `
            -o "../../../publish/win-x86"
      
      - name: Create ZIP (x86)
        run: |
          Compress-Archive -Path "./publish/win-x86/*" -DestinationPath "./RMCL.win-x86.zip" -Force
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: RMCL.win-x86.zip
          path: ./RMCL.win-x86.zip

  win-x64:
    needs: time
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Build (x64)
        run: |
          cd ./src/RMCL/RMCL.Desktop
          dotnet publish -c Release -r win-x64 `
            /p:PublishSingleFile=true `
            /p:PublishReadyToRun=true `
            /p:IncludeNativeLibrariesForSelfExtract=true `
            /p:SelfContained=true `
            /p:Version=${{ needs.time.outputs.v }} `
            -o "../../../publish/win-x64"
      
      - name: Create ZIP (x64)
        run: |
          Compress-Archive -Path "./publish/win-x64/*" -DestinationPath "./RMCL.win-x64.zip" -Force
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: RMCL.win-x64.zip
          path: ./RMCL.win-x64.zip

  win-arm64:
    needs: time
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Build (ARM64)
        run: |
          cd ./src/RMCL/RMCL.Desktop
          dotnet publish -c Release -r win-arm64 `
            /p:PublishSingleFile=true `
            /p:PublishReadyToRun=true `
            /p:IncludeNativeLibrariesForSelfExtract=true `
            /p:SelfContained=true `
            /p:Version=${{ needs.time.outputs.v }} `
            -o "../../../publish/win-arm64"
      
      - name: Create ZIP (ARM64)
        run: |
          Compress-Archive -Path "./publish/win-arm64/*" -DestinationPath "./RMCL.win-arm64.zip" -Force
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: RMCL.win-arm64.zip
          path: ./RMCL.win-arm64.zip

  # Linux 平台构建
  linux-x64:
    needs: time
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Build (Linux x64)
        run: |
          cd ./src/RMCL/RMCL.Desktop
          dotnet publish -c Release -r linux-x64 \
            /p:PublishSingleFile=true \
            /p:PublishReadyToRun=true \
            /p:IncludeNativeLibrariesForSelfExtract=true \
            /p:SelfContained=true \
            /p:Version=${{ needs.time.outputs.v }} \
            -o "../../../publish/linux-x64"
      
      - name: Create ZIP (Linux x64)
        run: |
          cd ./publish/linux-x64
          zip -r ../../RMCL.linux-x64.zip *
          cd ../..
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: RMCL.linux-x64.zip
          path: ./RMCL.linux-x64.zip

  linux-arm:
    needs: time
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Build (Linux ARM)
        run: |
          cd ./src/RMCL/RMCL.Desktop
          dotnet publish -c Release -r linux-arm \
            /p:PublishSingleFile=true \
            /p:PublishReadyToRun=true \
            /p:IncludeNativeLibrariesForSelfExtract=true \
            /p:SelfContained=true \
            /p:Version=${{ needs.time.outputs.v }} \
            -o "../../../publish/linux-arm"
      
      - name: Create ZIP (Linux ARM)
        run: |
          cd ./publish/linux-arm
          zip -r ../../RMCL.linux-arm.zip *
          cd ../..
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: RMCL.linux-arm.zip
          path: ./RMCL.linux-arm.zip

  linux-arm64:
    needs: time
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Build (Linux ARM64)
        run: |
          cd ./src/RMCL/RMCL.Desktop
          dotnet publish -c Release -r linux-arm64 \
            /p:PublishSingleFile=true \
            /p:PublishReadyToRun=true \
            /p:IncludeNativeLibrariesForSelfExtract=true \
            /p:SelfContained=true \
            /p:Version=${{ needs.time.outputs.v }} \
            -o "../../../publish/linux-arm64"
      
      - name: Create ZIP (Linux ARM64)
        run: |
          cd ./publish/linux-arm64
          zip -r ../../RMCL.linux-arm64.zip *
          cd ../..
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: RMCL.linux-arm64.zip
          path: ./RMCL.linux-arm64.zip

  # macOS 平台构建
  osx-arm64:
    needs: time
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Build (macOS ARM64)
        run: |
          cd ./src/RMCL/RMCL.Desktop
          dotnet publish -c Release -r osx-arm64 \
            /p:PublishSingleFile=true \
            /p:PublishReadyToRun=true \
            /p:IncludeNativeLibrariesForSelfExtract=true \
            /p:SelfContained=true \
            /p:Version=${{ needs.time.outputs.v }} \
            -o "../../../publish/osx-arm64"
      
      - name: Create ZIP (macOS ARM64)
        run: |
          cd ./publish/osx-arm64
          zip -r ../../RMCL.osx-arm64.zip *
          cd ../..
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: RMCL.osx-arm64.zip
          path: ./RMCL.osx-arm64.zip

  # 发布阶段
  publish:
    needs: 
      - time
      - win-x86
      - win-x64
      - win-arm64
      - linux-x64
      - linux-arm
      - linux-arm64
      - osx-arm64
    runs-on: ubuntu-latest
    steps:
      - name: Prepare release info
        id: release
        run: |
          echo "date=$(date +'%Y-%m-%d.%H-%M-%S')" >> $GITHUB_OUTPUT
          echo "title=v${{ needs.time.outputs.v }}" >> $GITHUB_OUTPUT
          echo "tag=RMCL-${{ needs.time.outputs.v }}" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts/

      - name: Verify artifacts
        run: |
          echo "Downloaded artifacts:"
          ls -lh ./artifacts/
          echo "ZIP contents:"
          unzip -l ./artifacts/RMCL.*.zip | head -5

      - name: Publish Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.TOKEN }}"
          title: "v${{ needs.time.outputs.v }}"
          automatic_release_tag: "RMCL.Transcend-${{ steps.gdate.outputs.date }}"
          prerelease: false
          files: |
            ./artifacts/*.zip